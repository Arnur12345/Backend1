#!/usr/bin/env python3
"""
–¢–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
"""

import asyncio
import os
import sys
from pathlib import Path
from typing import Optional

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src –≤ PYTHONPATH
sys.path.insert(0, str(Path(__file__).parent.parent))

from agentic_system.agent_manager import agent_manager
from agentic_system.file_manager import file_manager


class TerminalChat:
    def __init__(self):
        self.current_file_id: Optional[str] = None
        self.current_filename: Optional[str] = None
    
    def print_banner(self):
        """–í—ã–≤–æ–¥–∏—Ç –±–∞–Ω–Ω–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        print("=" * 60)
        print("ü§ñ –ê–ì–ï–ù–¢–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ê–ù–ê–õ–ò–ó–ê –§–ê–ô–õ–û–í")
        print("=" * 60)
        print("–ö–æ–º–∞–Ω–¥—ã:")
        print("  upload <–ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É>  - –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª")
        print("  list                   - –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã")
        print("  select <file_id>       - –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª –¥–ª—è —á–∞—Ç–∞")
        print("  agents                 - –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤")
        print("  history                - –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞")
        print("  clear                  - –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞")
        print("  help                   - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É")
        print("  exit                   - –í—ã–π—Ç–∏")
        print("=" * 60)
    
    async def upload_file(self, file_path: str) -> bool:
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –≤ —Å–∏—Å—Ç–µ–º—É"""
        if not os.path.exists(file_path):
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
            return False
        
        try:
            # –°–æ–∑–¥–∞–µ–º —Ñ–µ–π–∫–æ–≤—ã–π UploadFile –æ–±—ä–µ–∫—Ç
            class FakeUploadFile:
                def __init__(self, file_path: str):
                    self.filename = os.path.basename(file_path)
                    self.content_type = self._get_content_type(file_path)
                    self._file_path = file_path
                
                def _get_content_type(self, file_path: str) -> str:
                    ext = Path(file_path).suffix.lower()
                    if ext == '.txt':
                        return 'text/plain'
                    elif ext == '.csv':
                        return 'text/csv'
                    elif ext == '.json':
                        return 'application/json'
                    elif ext == '.md':
                        return 'text/markdown'
                    elif ext == '.html':
                        return 'text/html'
                    else:
                        return 'text/plain'
                
                async def read(self) -> bytes:
                    with open(self._file_path, 'rb') as f:
                        return f.read()
            
            fake_file = FakeUploadFile(file_path)
            file_info = await file_manager.save_file(fake_file)
            
            print(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"   ID: {file_info['file_id']}")
            print(f"   –ò–º—è: {file_info['original_filename']}")
            print(f"   –†–∞–∑–º–µ—Ä: {file_info['file_size']} –±–∞–π—Ç")
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±–∏—Ä–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            self.current_file_id = file_info['file_id']
            self.current_filename = file_info['original_filename']
            print(f"üìÅ –§–∞–π–ª '{self.current_filename}' –≤—ã–±—Ä–∞–Ω –¥–ª—è —á–∞—Ç–∞")
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: {e}")
            return False
    
    def list_files(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤"""
        files = file_manager.list_files()
        
        if not files:
            print("üìÇ –ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")
            return
        
        print("üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
        print("-" * 80)
        for file_info in files:
            status = "üü¢ [–í–´–ë–†–ê–ù]" if file_info['file_id'] == self.current_file_id else "‚ö™"
            print(f"{status} ID: {file_info['file_id'][:8]}...")
            print(f"    –ò–º—è: {file_info['original_filename']}")
            print(f"    –†–∞–∑–º–µ—Ä: {file_info['file_size']} –±–∞–π—Ç")
            print(f"    –ó–∞–≥—Ä—É–∂–µ–Ω: {file_info['upload_time']}")
            print("-" * 80)
    
    def select_file(self, file_id: str):
        """–í—ã–±–∏—Ä–∞–µ—Ç —Ñ–∞–π–ª –¥–ª—è —á–∞—Ç–∞"""
        # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π ID (–ø–µ—Ä–≤—ã–µ 8 —Å–∏–º–≤–æ–ª–æ–≤)
        if len(file_id) == 8:
            files = file_manager.list_files()
            for file_info in files:
                if file_info['file_id'].startswith(file_id):
                    file_id = file_info['file_id']
                    break
        
        file_info = file_manager.get_file_info(file_id)
        if not file_info:
            print(f"‚ùå –§–∞–π–ª —Å ID {file_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        self.current_file_id = file_id
        self.current_filename = file_info['original_filename']
        print(f"üìÅ –§–∞–π–ª '{self.current_filename}' –≤—ã–±—Ä–∞–Ω –¥–ª—è —á–∞—Ç–∞")
    
    def show_agents(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–≥–µ–Ω—Ç–æ–≤"""
        agents = agent_manager.get_available_agents()
        
        print("ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–≥–µ–Ω—Ç—ã:")
        print("-" * 50)
        for agent in agents:
            status = "‚úÖ" if agent.get('available', True) else "‚ùå"
            default = "‚≠ê [–ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ]" if agent['key'] == agent_manager.default_agent else ""
            print(f"{status} {agent['name']} ({agent['key']}) {default}")
            print(f"    –¢–∏–ø: {agent['type']}")
        print("-" * 50)
    
    def show_history(self):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞"""
        if not self.current_file_id:
            print("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª")
            return
        
        history = agent_manager.get_chat_history(self.current_file_id)
        
        if not history:
            print("üìù –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –ø—É—Å—Ç–∞")
            return
        
        print(f"üìù –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –¥–ª—è —Ñ–∞–π–ª–∞ '{self.current_filename}':")
        print("=" * 80)
        
        for i, msg in enumerate(history, 1):
            print(f"[{i}] {msg['timestamp']}")
            print(f"üë§ –í–æ–ø—Ä–æ—Å: {msg['question']}")
            print(f"ü§ñ [{msg['agent_type']}]: {msg['answer']}")
            print("-" * 80)
    
    def clear_history(self):
        """–û—á–∏—â–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞"""
        if not self.current_file_id:
            print("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª")
            return
        
        success = agent_manager.clear_chat_history(self.current_file_id)
        if success:
            print("‚úÖ –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞")
        else:
            print("‚ÑπÔ∏è –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ —É–∂–µ –ø—É—Å—Ç–∞")
    
    async def ask_question(self, question: str, agent_type: str = None):
        """–ó–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –∞–≥–µ–Ω—Ç—É"""
        if not self.current_file_id:
            print("‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª")
            return
        
        print(f"ü§î –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–æ–ø—Ä–æ—Å...")
        
        try:
            response = await agent_manager.process_question(
                file_id=self.current_file_id,
                question=question,
                agent_type=agent_type
            )
            
            if "error" in response:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response['error']}")
                return
            
            print(f"ü§ñ [{response['agent_type']}]: {response['answer']}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–æ–ø—Ä–æ—Å–∞: {e}")
    
    async def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.print_banner()
        
        while True:
            try:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª –≤ –ø—Ä–æ–º–ø—Ç–µ
                if self.current_file_id:
                    prompt = f"üìÅ {self.current_filename[:20]}... > "
                else:
                    prompt = "ü§ñ > "
                
                user_input = input(prompt).strip()
                
                if not user_input:
                    continue
                
                # –ü–∞—Ä—Å–∏–º –∫–æ–º–∞–Ω–¥—É
                parts = user_input.split(' ', 1)
                command = parts[0].lower()
                args = parts[1] if len(parts) > 1 else ""
                
                if command == 'exit':
                    print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                    break
                
                elif command == 'help':
                    self.print_banner()
                
                elif command == 'upload':
                    if not args:
                        print("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: upload <–ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É>")
                    else:
                        await self.upload_file(args)
                
                elif command == 'list':
                    self.list_files()
                
                elif command == 'select':
                    if not args:
                        print("‚ùå –£–∫–∞–∂–∏—Ç–µ ID —Ñ–∞–π–ª–∞: select <file_id>")
                    else:
                        self.select_file(args)
                
                elif command == 'agents':
                    self.show_agents()
                
                elif command == 'history':
                    self.show_history()
                
                elif command == 'clear':
                    self.clear_history()
                
                else:
                    # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞, —Ç–æ —ç—Ç–æ –≤–æ–ø—Ä–æ—Å
                    await self.ask_question(user_input)
            
            except KeyboardInterrupt:
                print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            except Exception as e:
                print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")


async def main():
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞"""
    chat = TerminalChat()
    await chat.run()


if __name__ == "__main__":
    asyncio.run(main()) 